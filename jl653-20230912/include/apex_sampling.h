/*--------------------------------------------------------------------*/
/* */
/* SAMPLING PORT constant and type definitions and management services*/
/* */
/*--------------------------------------------------------------------*/
#ifndef APEX_SAMPLING
#define APEX_SAMPLING

#ifdef __cplusplus
extern "C" {
#endif

#include "apex_types.h"

#define MAX_NUMBER_OF_SAMPLING_PORTS SYSTEM_LIMIT_NUMBER_OF_SAMPLING_PORTS
typedef NAME_TYPE SAMPLING_PORT_NAME_TYPE;
typedef APEX_INTEGER SAMPLING_PORT_ID_TYPE;
typedef enum { INVALID = 0, VALID = 1 } VALIDITY_TYPE;
typedef
struct {
  SYSTEM_TIME_TYPE REFRESH_PERIOD;
  MESSAGE_SIZE_TYPE MAX_MESSAGE_SIZE;
  PORT_DIRECTION_TYPE PORT_DIRECTION;
  VALIDITY_TYPE LAST_MSG_VALIDITY;
} SAMPLING_PORT_STATUS_TYPE;
#define CREATE_SAMPLING_PORT(SAMPLING_PORT_NAME, MAX_MESSAGE_SIZE, PORT_DIRECTION, REFRESH_PERIOD, SAMPLING_PORT_ID, RETURN_CODE) JL653_CREATE_SAMPLING_PORT(__FILE__, __FUNCTION__, __LINE__, SAMPLING_PORT_NAME, MAX_MESSAGE_SIZE, PORT_DIRECTION, REFRESH_PERIOD, SAMPLING_PORT_ID, RETURN_CODE)
JL653SHELL_API void JL653_CREATE_SAMPLING_PORT (
  const char *location_file,
  const char *location_function,
  int location_line,
  /*in */ SAMPLING_PORT_NAME_TYPE SAMPLING_PORT_NAME,
  /*in */ MESSAGE_SIZE_TYPE MAX_MESSAGE_SIZE,
  /*in */ PORT_DIRECTION_TYPE PORT_DIRECTION,
  /*in */ SYSTEM_TIME_TYPE REFRESH_PERIOD,
  /*out*/ SAMPLING_PORT_ID_TYPE *SAMPLING_PORT_ID,
  /*out*/ RETURN_CODE_TYPE *RETURN_CODE );
#define WRITE_SAMPLING_MESSAGE(SAMPLING_PORT_ID, MESSAGE_ADDR, LENGTH, RETURN_CODE) JL653_WRITE_SAMPLING_MESSAGE(__FILE__, __FUNCTION__, __LINE__, SAMPLING_PORT_ID, MESSAGE_ADDR, LENGTH, RETURN_CODE)
JL653SHELL_API void JL653_WRITE_SAMPLING_MESSAGE (
  const char *location_file,
  const char *location_function,
  int location_line,
  /*in */ SAMPLING_PORT_ID_TYPE SAMPLING_PORT_ID,
  /*in */ MESSAGE_ADDR_TYPE MESSAGE_ADDR, /* by reference */
  /*in */ MESSAGE_SIZE_TYPE LENGTH,
  /*out*/ RETURN_CODE_TYPE *RETURN_CODE );
#define READ_SAMPLING_MESSAGE(SAMPLING_PORT_ID, MESSAGE_ADDR, LENGTH, VALIDITY, RETURN_CODE) JL653_READ_SAMPLING_MESSAGE(__FILE__, __FUNCTION__, __LINE__, SAMPLING_PORT_ID, MESSAGE_ADDR, LENGTH, VALIDITY, RETURN_CODE)
JL653SHELL_API void JL653_READ_SAMPLING_MESSAGE (
  const char *location_file,
  const char *location_function,
  int location_line,
  /*in */ SAMPLING_PORT_ID_TYPE SAMPLING_PORT_ID,
  /*in */ MESSAGE_ADDR_TYPE MESSAGE_ADDR,
  /*out*/ MESSAGE_SIZE_TYPE *LENGTH,
  /*out*/ VALIDITY_TYPE *VALIDITY,
  /*out*/ RETURN_CODE_TYPE *RETURN_CODE );
#define GET_SAMPLING_PORT_ID(SAMPLING_PORT_NAME, SAMPLING_PORT_ID, RETURN_CODE) JL653_GET_SAMPLING_PORT_ID(__FILE__, __FUNCTION__, __LINE__, SAMPLING_PORT_NAME, SAMPLING_PORT_ID, RETURN_CODE)
JL653SHELL_API void JL653_GET_SAMPLING_PORT_ID (
  const char *location_file,
  const char *location_function,
  int location_line,
  /*in */ SAMPLING_PORT_NAME_TYPE SAMPLING_PORT_NAME,
  /*out*/ SAMPLING_PORT_ID_TYPE *SAMPLING_PORT_ID,
  /*out*/ RETURN_CODE_TYPE *RETURN_CODE );
#define GET_SAMPLING_PORT_STATUS(SAMPLING_PORT_ID, SAMPLING_PORT_STATUS, RETURN_CODE) JL653_GET_SAMPLING_PORT_STATUS(__FILE__, __FUNCTION__, __LINE__, SAMPLING_PORT_ID, SAMPLING_PORT_STATUS, RETURN_CODE)
JL653SHELL_API void JL653_GET_SAMPLING_PORT_STATUS (
  const char *location_file,
  const char *location_function,
  int location_line,
  /*in */ SAMPLING_PORT_ID_TYPE SAMPLING_PORT_ID,
  /*out*/ SAMPLING_PORT_STATUS_TYPE *SAMPLING_PORT_STATUS,
  /*out*/ RETURN_CODE_TYPE *RETURN_CODE );

#ifdef __cplusplus
}
#endif

#endif
